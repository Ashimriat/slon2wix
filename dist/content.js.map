{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/constants.js","webpack:///./src/content/index.js","webpack:///./src/content/routeProcessor.js"],"names":[],"mappings":";QAAA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;;QAEA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;;;QAGA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA,0CAA0C,gCAAgC;QAC1E;QACA;;QAEA;QACA;QACA;QACA,wDAAwD,kBAAkB;QAC1E;QACA,iDAAiD,cAAc;QAC/D;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA,yCAAyC,iCAAiC;QAC1E,gHAAgH,mBAAmB,EAAE;QACrI;QACA;;QAEA;QACA;QACA;QACA,2BAA2B,0BAA0B,EAAE;QACvD,iCAAiC,eAAe;QAChD;QACA;QACA;;QAEA;QACA,sDAAsD,+DAA+D;;QAErH;QACA;;;QAGA;QACA;;;;;;;;;;;;;AClFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAO;AACP;AACA;AACA;;AAEO;AACP;AACA;AACA;;AAEO;;AAEA;AACP;AACA;AACA;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;;AAEO;AACP;AACA;;AAEO;;AAEA;;AAEA;AACP;AACA;AACA;AACA;AACA;AACA;;AAEO;;AAEA;AACP;AACA;AACA;AACA;AACA;AACA;;AAEO;AACP;AACA;AACA;;AAEO;AACP;AACA;AACA;AACA;;AAEO;;AAEA;;AAEA;;;;;;;;;;;;;AClEP;AAAA;AAAA;AAA+D;AACX;;;AAGpD;AACA,kBAAkB,mDAAQ;AAC1B,6BAA6B,gEAAqB;AAClD,iBAAiB,gBAAgB;AACjC,GAAG;AACH,iBAAiB,OAAO,wEAAgB,IAAI;AAC5C;AACA;AACA,CAAC;;;;;;;;;;;;;;;;ACZD;AAAA;AAAA;AAOsB;;AAEtB;AACA,qCAAqC,gEAAqB;AAC1D,0CAA0C,gEAAqB;;AAE/D;AACA;AACA,qCAAqC,gEAAqB;AAC1D;AACA;AACA;;AAEA;AACA;;AAEA,QAAQ,4CAA4C,GAAG,yDAAc;;AAErE,gDAAgD,gEAAqB;AACrE;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA,QAAQ,yBAAyB,GAAG,yDAAc;;AAElD,gDAAgD,gEAAqB;AACrE;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA,iBAAiB,qCAAqC;AACtD;AACA;AACA,gCAAgC,wEAA6B;AAC7D;AACA;AACA;AACA;AACA,kBAAkB,iEAAsB;AACxC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,wEAA6B;AAC5D;AACA;AACA;AACA,OAAO,iEAAsB;AAC7B,GAAG;AACH;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA,gDAAgD,gEAAqB;;AAErE;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,yBAAyB,GAAG,yDAAc;;AAElD;AACA;AACA;AACA,+BAA+B,2EAAgC;AAC/D;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,mBAAmB,+BAA+B;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA,gDAAgD,gEAAqB;;AAErE;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,gCAAgC,wEAA6B;AAC7D;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEO;AACP,wCAAwC,sDAAW;AACnD,OAAO,sDAAW;AAClB,OAAO,sDAAW;AAClB,OAAO,sDAAW;AAClB,OAAO,sDAAW;AAClB;AACA","file":"content.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/content/index.js\");\n","export const HOST = {\r\n\tSLON: 'slon-tea.ru',\r\n\tWIX: 'wix.com'\r\n};\r\n\r\nexport const STORAGE_KEYS = {\r\n\tDATA: 'slon_data',\r\n\tLAST_MODIFIED: 'slon_last_modified'\r\n};\r\n\r\nexport const PORT_NAME = 'SLON_2_WIX';\r\n\r\nexport const MESSAGES = {\r\n\tOBTAIN_ITEM_INFO: 'SLON.OBTAIN_ITEM_INFO',\r\n\tGOT_ITEM_INFO: 'SLON.GOT_ITEM_INFO'\r\n};\r\n\r\nexport const SLON_ROUTES = {\r\n\tREGEXP: /\\/(tea|kofe|posuda_i_aksessuari|sladosti)/,\r\n\tTEA: '/tea',\r\n\tCOFFEE: '/kofe',\r\n\tTABLEWARE: '/posuda_i_aksessuari',\r\n\tSWEETS: '/sladosti'\r\n};\r\n\r\nexport const SERVER_ROUTES = {\r\n\tPARSE_INFO_FILE: '/getInfo'\r\n};\r\n\r\nexport const CONTENT_TABLE_SELECTOR = '#product-list > .row > .col.s12.m8.l9 > ul.row';\r\n\r\nexport const ITEM_SELECTOR = 'li > div > a';\r\n\r\nexport const COFFEE_COOK_CATEGORIES = {\r\n\t'Эспрессо': 'espresso',\r\n\t'Турка': 'turk',\r\n\t'Фильтр': 'filter',\r\n\t'Френч-пресс': 'frenchPress',\r\n\t'Чашка': 'cup'\r\n};\r\n\r\nexport const COFFEE_COOK_CATEGORIES_REGEXP = /(Эспрессо|Турка|Фильтр|Френч-пресс|Чашка)/;\r\n\r\nexport const ITEMS_TYPES_SELECTORS = {\r\n\timage: '#product-image',\r\n\tdescription: '#desc_pr',\r\n\tvendorCode: '.bas_f_i.skusi_a',\r\n\terror404: '.img_slon',\r\n\tname: '#prod_title'\r\n};\r\n\r\nexport const SECTIONS_NAMES = {\r\n\tCOMMON: [ 'Описание', 'Вкус'],\r\n\tTEA: [ 'Как заваривать' ],\r\n};\r\n\r\nexport const COFFEE_INFO_CATEGORIES = {\r\n\t'Способ обработки кофейных зерен': 'processing',\r\n\t'Степень обжарки': 'roast',\r\n\t'Кислотность напитка по шкале от 0 до 5': 'toxicity'\r\n};\r\n\r\nexport const COFFEE_INFO_CATEGORIES_REGEXP = /(Способ обработки кофейных зерен|Степень обжарки|Кислотность напитка по шкале от 0 до 5)/;\r\n\r\nexport const SWEETS_INFO_CATEGORIES_REGEXP = /(Состав|Условия хранения)/;\r\n\r\nexport const TABLEWARE_INFO_CATEGORIES_REGEXP = /^Объ(е|ё)м:/;\r\n","import { MESSAGES, ITEMS_TYPES_SELECTORS } from '../constants';\r\nimport { getInfoFromRoute } from './routeProcessor';\r\n\r\n\r\nchrome.runtime.onMessage.addListener((msg, sender, sendResponse) => {\r\n\tif (msg.type === MESSAGES.OBTAIN_ITEM_INFO) {\r\n\t\tif (document.querySelector(ITEMS_TYPES_SELECTORS.error404)) {\r\n\t\t\tsendResponse({ info: 'error' });\r\n\t\t} else {\r\n\t\t\tsendResponse({ info: getInfoFromRoute() });\r\n\t\t}\r\n\t}\r\n});\r\n\r\n\r\n\r\n","import {\r\n\tITEMS_TYPES_SELECTORS, SECTIONS_NAMES,\r\n\tCOFFEE_COOK_CATEGORIES, COFFEE_COOK_CATEGORIES_REGEXP,\r\n\tCOFFEE_INFO_CATEGORIES, COFFEE_INFO_CATEGORIES_REGEXP,\r\n\tSWEETS_INFO_CATEGORIES_REGEXP,\r\n\tTABLEWARE_INFO_CATEGORIES_REGEXP,\r\n\tSLON_ROUTES\r\n} from '../constants';\r\n\r\nconst getBaseInfo = (withNameTrim = true) => {\r\n\tconst name = document.querySelector(ITEMS_TYPES_SELECTORS.name).textContent;\r\n\tconst imageNode = document.querySelector(ITEMS_TYPES_SELECTORS.image);\r\n\t\r\n\treturn {\r\n\t\tname: withNameTrim ? name.trim() : name,\r\n\t\tvendorCode: document.querySelector(ITEMS_TYPES_SELECTORS.vendorCode).textContent.trim(),\r\n\t\timageLink: imageNode ? imageNode.src : ''\r\n\t};\r\n};\r\n\r\nconst obtainTeaInfo = () => {\r\n\tconst res = getBaseInfo();\r\n\t\r\n\tconst { COMMON: COMMON_SECTION, TEA: TEA_SECTIONS } = SECTIONS_NAMES;\r\n\t\r\n\tconst descriptionNode = document.querySelector(ITEMS_TYPES_SELECTORS.description);\r\n\tconst weightNode = descriptionNode.firstElementChild;\r\n\t\r\n\tif (weightNode) {\r\n\t\tres.weight = weightNode.textContent;\r\n\t}\r\n\t\r\n\tlet descriptionTexts = [],\r\n\t\thowToCookTexts = [],\r\n\t\tisHowToCookPassed = false,\r\n\t\tisLastNode = false,\r\n\t\ttmpNode,\r\n\t\ttmpNodeText,\r\n\t\tclonedNode;\r\n\t\r\n\twhile (!isLastNode) {\r\n\t\ttmpNode = tmpNode ? tmpNode.previousElementSibling : descriptionNode.lastElementChild;\r\n\t\tif (!tmpNode) {\r\n\t\t\tres.description = descriptionNode.textContent.trim();\r\n\t\t\tisLastNode = true;\r\n\t\t\tcontinue;\r\n\t\t}\r\n\t\ttmpNodeText = tmpNode.textContent.trim();\r\n\t\tif (!tmpNode.querySelector('span > strong')) {\r\n\t\t\t// !isTasteNode\r\n\t\t\tif (![...COMMON_SECTION, ...TEA_SECTIONS].includes(tmpNodeText)) {\r\n\t\t\t\tif (!isHowToCookPassed) {\r\n\t\t\t\t\thowToCookTexts.unshift(tmpNodeText)\r\n\t\t\t\t} else {\r\n\t\t\t\t\tdescriptionTexts.unshift(tmpNodeText);\r\n\t\t\t\t}\r\n\t\t\t} else if (TEA_SECTIONS.includes(tmpNodeText)) {\r\n\t\t\t\tisHowToCookPassed = true;\r\n\t\t\t\tres.howToCook = howToCookTexts.join(' ');\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tclonedNode = tmpNode.cloneNode(true);\r\n\t\t\tclonedNode.removeChild(clonedNode.firstChild);\r\n\t\t\tdescriptionTexts.unshift(clonedNode.textContent.trim());\r\n\t\t}\r\n\t\tif (tmpNode === weightNode.nextElementSibling) {\r\n\t\t\tisLastNode = true;\r\n\t\t}\r\n\t}\r\n\t\r\n\tres.description = descriptionTexts.join(' ');\r\n\t\r\n\treturn res;\r\n};\r\n\r\nconst obtainCoffeeInfo = () => {\r\n\tconst res = getBaseInfo(false);\r\n\t\r\n\tconst { COMMON: COMMON_SECTION } = SECTIONS_NAMES;\r\n\t\r\n\tconst descriptionNode = document.querySelector(ITEMS_TYPES_SELECTORS.description);\r\n\tconst weightNode = descriptionNode.firstElementChild;\r\n\tif (weightNode) {\r\n\t\tres.weight = weightNode.textContent;\r\n\t}\r\n\tres.name = res.name.replace(res.weight + 'р', '').trim();\r\n\t\r\n\t\r\n\tlet howToCookNode = descriptionNode.lastElementChild;\r\n\tlet tmpNode, tmpNodeText, tmpMatch;\r\n\tif (howToCookNode) {\r\n\t\tres.howToCook = {};\r\n\t\tfor (let i = 0; i < howToCookNode.childElementCount; i++) {\r\n\t\t\ttmpNode = !tmpNode ? howToCookNode.lastElementChild : tmpNode.previousElementSibling;\r\n\t\t\ttmpNodeText = tmpNode.textContent;\r\n\t\t\ttmpMatch = tmpNodeText.match(COFFEE_COOK_CATEGORIES_REGEXP);\r\n\t\t\tif (tmpMatch) {\r\n\t\t\t\ttmpNodeText = tmpNodeText.replace(tmpMatch[0], '').trim();\r\n\t\t\t\ttmpNodeText = tmpNodeText.substring(1).trim();\r\n\t\t\t\ttmpNodeText = tmpNodeText.charAt(0).toUpperCase() + tmpNodeText.slice(1);\r\n\t\t\t\tres.howToCook[COFFEE_COOK_CATEGORIES[tmpMatch[0]]] = tmpNodeText;\r\n\t\t\t}\r\n\t\t}\r\n\t\ttmpNode = howToCookNode.previousElementSibling;\r\n\t}\r\n\t\r\n\tlet descriptionTexts = [],\r\n\t\tisLastNode = false,\r\n\t\tclonedNode;\r\n\ttmpNodeText = null;\r\n\ttmpMatch = null;\r\n\t\r\n\twhile (!isLastNode) {\r\n\t\ttmpNode = tmpNode ? tmpNode.previousElementSibling : descriptionNode.lastElementChild;\r\n\t\tif (!tmpNode) {\r\n\t\t\tres.description = descriptionNode.textContent.trim();\r\n\t\t\tisLastNode = true;\r\n\t\t\tcontinue;\r\n\t\t}\r\n\t\ttmpNodeText = tmpNode.textContent.trim();\r\n\t\ttmpMatch = tmpNodeText.match(COFFEE_INFO_CATEGORIES_REGEXP);\r\n\t\tif (tmpMatch) {\r\n\t\t\ttmpNodeText = tmpNodeText.replace(tmpMatch[0], '').trim();\r\n\t\t\ttmpNodeText = tmpNodeText.charAt(0).toUpperCase() + tmpNodeText.slice(1);\r\n\t\t\tres[COFFEE_INFO_CATEGORIES[tmpMatch[0]]] = tmpNodeText;\r\n\t\t} else {\r\n\t\t\tif (!tmpNode.querySelector('span > strong')) {\r\n\t\t\t\tif (!COMMON_SECTION.includes(tmpNodeText)) {\r\n\t\t\t\t\tdescriptionTexts.unshift(tmpNodeText);\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tclonedNode = tmpNode.cloneNode(true);\r\n\t\t\t\tclonedNode.removeChild(clonedNode.firstChild);\r\n\t\t\t\tdescriptionTexts.unshift(clonedNode.textContent.trim());\r\n\t\t\t}\r\n\t\t\tif (tmpNode === weightNode.nextElementSibling.nextElementSibling) {\r\n\t\t\t\tisLastNode = true;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t\r\n\tres.description = descriptionTexts.join(' ');\r\n\t\r\n\treturn res;\r\n};\r\n\r\nconst obtainTablewareInfo = () => {\r\n\tconst res = getBaseInfo();\r\n\t\r\n\tconst descriptionNode = document.querySelector(ITEMS_TYPES_SELECTORS.description);\r\n\t\r\n\tif (!descriptionNode.childElementCount) {\r\n\t\tif (descriptionNode.textContent.trim()) {\r\n\t\t\tres.description = descriptionNode.textContent.trim();\r\n\t\t}\r\n\t\treturn res;\r\n\t}\r\n\t\r\n\tlet tmpNode,\r\n\t\ttmpNode1,\r\n\t\ttmpNodeText,\r\n\t\ttmpText,\r\n\t\ttmpMatch,\r\n\t\tisTopNode = false;\r\n\tconst descriptionTexts = [];\r\n\tconst { COMMON: COMMON_SECTION } = SECTIONS_NAMES;\r\n\t\r\n\twhile (!isTopNode) {\r\n\t\ttmpNode = tmpNode ? tmpNode.previousElementSibling : descriptionNode.lastElementChild;\r\n\t\ttmpNodeText = tmpNode.textContent;\r\n\t\ttmpMatch = tmpNodeText.match(TABLEWARE_INFO_CATEGORIES_REGEXP);\r\n\t\tif (tmpMatch) {\r\n\t\t\tres.capacity = tmpNodeText.replace(tmpMatch[0], '').trim();\r\n\t\t} else if (tmpNode === descriptionNode.firstElementChild) {\r\n\t\t\tif (!COMMON_SECTION.includes(tmpNodeText)) {\r\n\t\t\t\tdescriptionTexts.push(tmpNodeText);\r\n\t\t\t}\r\n\t\t\tisTopNode = true;\r\n\t\t} else {\r\n\t\t\tif (tmpNode.tagName === 'UL') {\r\n\t\t\t\ttmpNodeText = '';\r\n\t\t\t\tfor (let i = 0; i < tmpNode.childElementCount; i++) {\r\n\t\t\t\t\ttmpNode1 = tmpNode1 ? tmpNode1.nextElementSibling : tmpNode.firstElementChild;\r\n\t\t\t\t\ttmpText = tmpNode1.textContent;\r\n\t\t\t\t\ttmpText = tmpText.charAt(0).toLowerCase() + tmpText.slice(1);\r\n\t\t\t\t\tif (i !== 0) {\r\n\t\t\t\t\t\ttmpNodeText += i !== tmpNode.childElementCount - 1 ? ', ' : ' и ';\r\n\t\t\t\t\t}\r\n\t\t\t\t\ttmpNodeText += tmpText;\r\n\t\t\t\t}\r\n\t\t\t\ttmpNode1 = null;\r\n\t\t\t}\r\n\t\t\tif (!['.', ':'].includes(tmpNodeText.charAt(tmpNodeText.length - 1))) {\r\n\t\t\t\ttmpNodeText += '.';\r\n\t\t\t}\r\n\t\t\tdescriptionTexts.unshift(tmpNodeText);\r\n\t\t}\r\n\t}\r\n\t\r\n\tres.description = descriptionTexts.join(' ');\r\n\t\r\n\treturn res;\r\n};\r\n\r\nconst obtainSweetsInfo = () => {\r\n\t// TODO: отладить, не везде подхватывает описание\r\n\tconst res = getBaseInfo();\r\n\t\r\n\tconst descriptionNode = document.querySelector(ITEMS_TYPES_SELECTORS.description);\r\n\t\r\n\tif (descriptionNode.childElementCount) {\r\n\t\tlet tmpNode = descriptionNode.firstElementChild;\r\n\t\tlet isDescriptionEnded = false;\r\n\t\tlet tmpNodeText, tmpMatch;\r\n\t\t\r\n\t\tconst descriptionTexts = [];\r\n\t\t\r\n\t\twhile (!isDescriptionEnded) {\r\n\t\t\ttmpNode = tmpNode.nextElementSibling;\r\n\t\t\ttmpNodeText = tmpNode.textContent;\r\n\t\t\ttmpMatch = tmpNodeText.match(SWEETS_INFO_CATEGORIES_REGEXP);\r\n\t\t\tif (tmpMatch || tmpNode === descriptionNode.lastElementChild) {\r\n\t\t\t\tisDescriptionEnded = true;\r\n\t\t\t} else {\r\n\t\t\t\tdescriptionTexts.push(tmpNodeText);\r\n\t\t\t}\r\n\t\t}\r\n\t\tres.description = descriptionTexts.join(' ');\r\n\t}\r\n\t\r\n\treturn res;\r\n};\r\n\r\nexport const getInfoFromRoute = () => {\r\n\tswitch (window.location.pathname.match(SLON_ROUTES.REGEXP)[0]) {\r\n\t\tcase SLON_ROUTES.TEA: return obtainTeaInfo();\r\n\t\tcase SLON_ROUTES.COFFEE: return obtainCoffeeInfo();\r\n\t\tcase SLON_ROUTES.TABLEWARE: return obtainTablewareInfo();\r\n\t\tcase SLON_ROUTES.SWEETS: return obtainSweetsInfo();\r\n\t}\r\n};\r\n"],"sourceRoot":""}